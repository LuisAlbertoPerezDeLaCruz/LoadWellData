/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.loadWellData;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import miLibreria.bd.ManejoBDAccess;
import miLibreria.bd.*;

/**
 *
 * @author USUARIO
 */
public class MuestraSurveyPerMD extends javax.swing.JDialog implements miLibreria.GlobalConstants{

    public long surveyId;
    public Run oRun;
    public ManejoBDI oBD;
    static DefaultTableModel modelo;
    private Survey oSurvey;
    
    public MuestraSurveyPerMD(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void setParam(ManejoBDI oBDIn) {
        oBD=oBDIn;
        modelo = (DefaultTableModel) this.jTable1.getModel();
//        this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(35);
//        this.jTable1.getColumnModel().getColumn(1).setPreferredWidth(20);
//        this.jTable1.getColumnModel().getColumn(2).setPreferredWidth(25);
    }

    public void cargaTabla() {
        ResultSet rs;
        int cant=0;
        SurveyPerMD oSurveyPerMD=new SurveyPerMD();
        DecimalFormat df = new DecimalFormat("##########0.000");
        
        try {
            oSurvey=(Survey) oBD.select(Survey.class, "Id="+surveyId)[0];
        } catch (InstantiationException ex) {
            Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        rs=oBD.select("SELECT count(*) FROM SurveyPerMD WHERE surveyId="+surveyId);
        if (rs!=null) {
            try {
                while (rs.next()) {
                    cant=rs.getInt(1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (cant>0) {
            Object[] o = new Object[cant];
            try {
                o=oBD.select(SurveyPerMD.class, "surveyId="+surveyId);
            } catch (InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(Level.SEVERE, null, ex);
            }
            for (int i=0;i<=cant-1;i++) {
                oSurveyPerMD=(SurveyPerMD) o[i];
                modelo.addRow(new Object[] { oSurveyPerMD.getMd(),
                preparaValor(df.format(oSurveyPerMD.getIncl())),
                preparaValor(df.format(oSurveyPerMD.getAzim())),
                preparaValor(df.format(oSurveyPerMD.getTvd())),
                preparaValor(df.format(oSurveyPerMD.getVsec())),
                preparaValor(df.format(oSurveyPerMD.getNs())),
                preparaValor(df.format(oSurveyPerMD.getEw())),
                preparaValor(df.format(oSurveyPerMD.getDls())),
                preparaValor(df.format(oSurvey.getTort())),
                preparaValor(df.format(oSurvey.getAhd())),
                preparaValor(df.format(oSurvey.getDdi())),
                preparaValor(df.format(oSurvey.getErd())) });
            }
        }
    }    
        
    private Object preparaValor(Object o) {
        if (o.toString().contains(""+valorNulo)) {
            return valorNuloMuestra;
        } else
            return o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "md", "incl", "azim", "tvd", "vsec", "ns", "ew", "dls", "tort", "ahd", "ddi", "erd"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 926, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MuestraSurveyPerMD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MuestraSurveyPerMD dialog = new MuestraSurveyPerMD(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
